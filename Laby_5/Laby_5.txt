-- Zadanie 1

INSERT INTO user_sdo_geom_metadata VALUES ('FIGURY', 'KSZTALT',
    MDSYS.SDO_DIM_ARRAY(
        MDSYS.SDO_DIM_ELEMENT('X', 0, 100, 0.01),
        MDSYS.SDO_DIM_ELEMENT('Y', 0, 100, 0.01)), NULL);

-- Zadanie 2

SELECT SDO_TUNE.ESTIMATE_RTREE_INDEX_SIZE(3000000, 8192, 10, 2, 0)
FROM FIGURY WHERE ROWNUM <= 1;

-- Zadanie 3

CREATE INDEX ksztalt_idx ON figury(KSZTALT) INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;

-- Zadanie 4

SELECT ID 
FROM FIGURY
WHERE SDO_FILTER(KSZTALT, 
    SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(3,3, NULL), NULL, NULL)) = 'TRUE';

-- Zadanie 5

SELECT ID FROM FIGURY
WHERE SDO_RELATE(KSZTALT,
    SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(3,3, NULL), NULL, NULL), 'mask=ANYINTERACT') = 'TRUE';

-- Zadanie 6

SELECT A.CITY_NAME, 
    ROUND(SDO_NN_DISTANCE(1), 7) AS DISTANCE
FROM MAJOR_CITIES A, 
    (SELECT GEOM FROM MAJOR_CITIES WHERE CITY_NAME = 'Warsaw') W
WHERE 
    SDO_NN(A.GEOM, W.GEOM, 'sdo_num_res=10 unit=km', 1) = 'TRUE'
AND A.CITY_NAME <> 'Warsaw';

-- Zadanie 7

SELECT A.CITY_NAME
FROM MAJOR_CITIES A
WHERE SDO_WITHIN_DISTANCE(
    A.GEOM,
    (SELECT GEOM FROM MAJOR_CITIES WHERE CITY_NAME = 'Warsaw'),
    'distance=100 unit=km'
) = 'TRUE'
AND A.CITY_NAME <> 'Warsaw';

-- Zadanie 8

SELECT A.CNTRY_NAME KRAJ, B.CITY_NAME MIASTO
FROM COUNTRY_BOUNDARIES A, MAJOR_CITIES B
WHERE SDO_RELATE(B.GEOM, A.GEOM, 'mask=INSIDE') = 'TRUE'
AND A.CNTRY_NAME = 'Slovakia';

-- Zadanie 9

SELECT A.CNTRY_NAME AS PANSTWO,
    ROUND(SDO_GEOM.SDO_DISTANCE(A.GEOM, (SELECT GEOM FROM COUNTRY_BOUNDARIES WHERE CNTRY_NAME = 'Poland'), 1, 'unit=km'), 7) AS ODL
FROM COUNTRY_BOUNDARIES A
WHERE SDO_RELATE(
    A.GEOM,
    (SELECT GEOM FROM COUNTRY_BOUNDARIES WHERE CNTRY_NAME = 'Poland'),
    'mask=ANYINTERACT') != 'TRUE'
AND A.CNTRY_NAME <> 'Poland';

-- Zadanie 10 

SELECT A.CNTRY_NAME, ROUND(SDO_GEOM.SDO_LENGTH(SDO_GEOM.SDO_INTERSECTION(A.GEOM, B.GEOM, 1), 1, 'unit=km'), 8) ODLEGLOSC
FROM COUNTRY_BOUNDARIES A, COUNTRY_BOUNDARIES B
WHERE SDO_FILTER(A.GEOM, B.GEOM) = 'TRUE' AND B.CNTRY_NAME = 'Poland';

-- Zadanie 11

SELECT CNTRY_NAME
FROM COUNTRY_BOUNDARIES
ORDER BY SDO_GEOM.SDO_AREA(GEOM) DESC
FETCH FIRST 1 ROWS ONLY;

-- Zadanie 12

SELECT ROUND(SDO_GEOM.SDO_AREA(SDO_GEOM.SDO_MBR(SDO_GEOM.SDO_UNION(
    A.GEOM, B.GEOM, 0.01)), 1, 'unit=SQ_KM'), 5) SQ_KM
FROM MAJOR_CITIES A, MAJOR_CITIES B
WHERE A.CITY_NAME = 'Warsaw' AND B.CITY_NAME = 'Lodz';

-- Zadanie 13

SELECT
    SDO_GEOM.SDO_UNION(A.GEOM, B.GEOM, 0.01).GET_DIMS() ||
    SDO_GEOM.SDO_UNION(A.GEOM, B.GEOM, 0.01).GET_LRS_DIM() ||
    LPAD(SDO_GEOM.SDO_UNION(A.GEOM, B.GEOM, 0.01).GET_GTYPE(), 2, '0') GTYPE
FROM COUNTRY_BOUNDARIES A, MAJOR_CITIES B
WHERE A.cntry_name = 'Poland' AND B.city_name = 'Prague';

-- Zadanie 14

SELECT B.CITY_NAME, A.CNTRY_NAME 
FROM COUNTRY_BOUNDARIES A, MAJOR_CITIES B
WHERE A.CNTRY_NAME = B.CNTRY_NAME 
AND SDO_GEOM.SDO_DISTANCE(
    SDO_GEOM.SDO_CENTROID(A.GEOM, 1), B.GEOM, 1) = 
        (SELECT MIN(SDO_GEOM.SDO_DISTANCE(SDO_GEOM.SDO_CENTROID(A.GEOM, 1), B.GEOM, 1))
            FROM COUNTRY_BOUNDARIES A, MAJOR_CITIES B 
            WHERE A.CNTRY_NAME = B.CNTRY_NAME);
            
-- Zadanie 15

SELECT NAME, ROUND(SUM(dlugosc), 7) DLUGOSC
FROM (SELECT B.NAME, SDO_GEOM.SDO_LENGTH(SDO_GEOM.SDO_INTERSECTION(A.GEOM, B.GEOM, 1), 1, 'unit=KM') DLUGOSC
FROM COUNTRY_BOUNDARIES A, RIVERS B
WHERE SDO_RELATE(
    A.GEOM,
    SDO_GEOMETRY(
        2001,
        8307,
        B.GEOM.SDO_POINT,
        B.GEOM.SDO_ELEM_INFO,
        B.GEOM.SDO_ORDINATES), 'mask=ANYINTERACT') = 'TRUE' 
AND A.CNTRY_NAME = 'Poland')
GROUP BY NAME;
